// Copyright (C) 2006-2024 eHiWay Corporation
// Your use of eHiWay Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the eHiWay Program License 
// Subscription Agreement, eHiWay MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by eHiWay and sold by 
// eHiWay or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "eHiWay"
// PROGRAM "eLinx 64-Bit"
// VERSION "Version 3.0 "

// DATE "11/04/2024 12:59:11"                                                             

module 	wires (
	USART1_TX,
	USART1_RX,
	UART_TX1,
	UART_RX1,
	USART2_TX,
	USART2_RX,
	UART_TX2,
	UART_RX2,
	USART3_TX,
	USART3_RX,
	UART_TX3,
	UART_RX3,
	PWM_M,
	PWM_M_N,
	MORTOR,
	MORTOR_N,
	PWM_Raidar,
	Raidar_PWM,
	PWM_R,
	ROUTER,
	BUZZER,
	BUZZERS,
	U1,
	U3);
input 	USART1_TX;
output 	USART1_RX;
output 	UART_TX1;
input 	UART_RX1;
input 	USART2_TX;
output 	USART2_RX;
output 	UART_TX2;
input 	UART_RX2;
input 	USART3_TX;
output 	USART3_RX;
output 	UART_TX3;
input 	UART_RX3;
input 	PWM_M;
input 	PWM_M_N;
output 	MORTOR;
output 	MORTOR_N;
input 	PWM_Raidar;
output 	Raidar_PWM;
input 	PWM_R;
output 	ROUTER;
input 	BUZZER;
output 	BUZZERS;
input 	U1;
output 	U3;
wire \MORTOR~0 ;
wire \MORTOR_N~0 ;


wire gnd;
wire vcc;

assign gnd = 1'b0;
assign vcc = 1'b1;


stratix_lcell \MORTOR~0_I (
	.dataa(PWM_M),
	.datad(PWM_M_N),
	.combout(\MORTOR~0 ));
defparam \MORTOR~0_I .operation_mode = "normal";
defparam \MORTOR~0_I .synch_mode = "off";
defparam \MORTOR~0_I .register_cascade_mode = "off";
defparam \MORTOR~0_I .sum_lutc_input = "datac";
defparam \MORTOR~0_I .lut_mask = "00AA";
defparam \MORTOR~0_I .output_mode = "comb_only";

stratix_lcell \MORTOR_N~0_I (
	.dataa(PWM_M),
	.datab(PWM_M_N),
	.combout(\MORTOR_N~0 ));
defparam \MORTOR_N~0_I .operation_mode = "normal";
defparam \MORTOR_N~0_I .synch_mode = "off";
defparam \MORTOR_N~0_I .register_cascade_mode = "off";
defparam \MORTOR_N~0_I .sum_lutc_input = "datac";
defparam \MORTOR_N~0_I .lut_mask = "8888";
defparam \MORTOR_N~0_I .output_mode = "comb_only";

assign USART1_RX = UART_RX1;

assign UART_TX1 = USART1_TX;

assign USART2_RX = gnd;

assign UART_TX2 = U1;

assign USART3_RX = UART_RX3;

assign UART_TX3 = USART3_TX;

assign MORTOR = \MORTOR~0 ;

assign MORTOR_N = \MORTOR_N~0 ;

assign Raidar_PWM = PWM_Raidar;

assign ROUTER = PWM_R;

assign BUZZERS = BUZZER;

assign U3 = UART_RX2;

endmodule
